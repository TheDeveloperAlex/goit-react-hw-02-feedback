{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","percentage","Notification","message","FeedbackOptions","type","onClick","Section","title","children","App","state","countPositiveFeedbackPercentage","Math","floor","countTotal","setState","prev","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+OAaeA,EAbI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAEjD,OACQ,oCACQ,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,uCAAUC,EAAV,YCFDC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,6BAAKA,KCWEC,EAbS,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACtC,OACI,qCACI,gDACA,gCACI,wBAAQM,KAAK,SAASC,QAAST,EAA/B,kBACA,wBAAQQ,KAAK,SAASC,QAAUR,EAAhC,qBACA,wBAAQO,KAAK,SAASC,QAASP,EAA/B,wBCKDQ,EAVC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,gCACI,6BAAKD,IACJC,MCyEEC,E,4MAxEdC,MAAQ,CACLd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,gCAAkC,WAChC,MAA+B,EAAKD,MAA5Bd,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QAEjB,OADUe,KAAKC,MAAc,IAAPjB,GAAeE,EAAMF,EAAOC,K,EAItDiB,WAAa,WACX,MAA+B,EAAKJ,MAA5Bd,EAAR,EAAQA,KAER,OAFA,EAAcE,IACIF,EADlB,EAAmBC,S,EAYrBD,KAAO,WACL,EAAKmB,UAAS,SAAAC,GACV,MAAO,CAAEpB,KAAMoB,EAAKpB,KAAO,MAE7B,EAAKe,mC,EAGRd,QAAU,WACT,EAAKkB,UAAS,SAAAC,GACV,MAAO,CAAEnB,QAASmB,EAAKnB,QAAU,MAEnC,EAAKc,mC,EAERb,IAAM,WACL,EAAKiB,UAAS,SAAAC,GACV,MAAO,CAAElB,IAAKkB,EAAKlB,IAAM,MAE3B,EAAKa,mC,4CAMT,WACE,MAA+BM,KAAKP,MAA5Bd,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACbG,EAAaiB,KAAKN,kCAClBZ,EAAQkB,KAAKH,aAGnB,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,iBAAf,SACE,cAAC,EAAD,CAAiBX,KAAMqB,KAAKrB,KAAMC,QAASoB,KAAKpB,QAASC,IAAKmB,KAAKnB,QAGvE,cAAC,EAAD,CAASS,MAAM,aAAf,SACe,IAAVR,EAAc,cAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,WAAYA,IAAkB,cAAC,EAAD,CAAeE,QAAQ,+B,GA/D9HgB,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e2c5f25.chunk.js","sourcesContent":["const Statistics = ({ good, neutral, bad, total, percentage }) => {\r\n    \r\nreturn (\r\n        <section>\r\n                <p>good: {good}</p>\r\n                <p>neutral: {neutral}</p>\r\n                <p>bad: {bad}</p>\r\n                <p>total: {total}</p>\r\n                <p>Good: {percentage}% </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Statistics;","const Notification = ({ message }) => {\r\n    return (\r\n        <h2>{message}</h2>\r\n    );\r\n}\r\n\r\nexport default Notification;","const FeedbackOptions = ({ good, neutral, bad }) => {\r\n    return (\r\n        <>\r\n            <h2>Leave feedback</h2>\r\n            <div>\r\n                <button type=\"button\" onClick={good }>good</button>\r\n                <button type=\"button\" onClick={ neutral}>neutral</button> \r\n                <button type=\"button\" onClick={bad}>bad</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FeedbackOptions;","\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react'\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\nclass App extends Component {\r\n\r\n state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    const res = Math.floor((good * 100) / (bad + good + neutral))\r\n      return (res)\r\n  }\r\n\r\n  countTotal = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    const res = bad + good + neutral;\r\n    return res;\r\n  }\r\n\r\n  // updateStat = (property) => {\r\n  //     this.setState(prev => {\r\n  //       return { [property]: prev[property] + 1 }\r\n  //     });\r\n  //     this.countPositiveFeedbackPercentage();\r\n  // };\r\n\r\n  good = () => {\r\n    this.setState(prev => {\r\n        return { good: prev.good + 1 }\r\n      });\r\n      this.countPositiveFeedbackPercentage();\r\n    \r\n  }\r\n   neutral = () => {\r\n    this.setState(prev => {\r\n        return { neutral: prev.neutral + 1 }\r\n      });\r\n      this.countPositiveFeedbackPercentage();\r\n  }\r\n   bad = () => {\r\n    this.setState(prev => {\r\n        return { bad: prev.bad + 1 }\r\n      });\r\n      this.countPositiveFeedbackPercentage();\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { good, bad, neutral } = this.state;\r\n    const percentage = this.countPositiveFeedbackPercentage();\r\n    const total = this.countTotal();\r\n\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Leave feedback\">\r\n          <FeedbackOptions good={this.good} neutral={this.neutral} bad={this.bad} />\r\n        </Section>\r\n        \r\n      <Section title=\"Statistics\">\r\n          {total !== 0 ? <Statistics good={good} neutral={neutral} bad={bad} total={total} percentage={percentage}  /> : <Notification  message='No feedback given' /> }\r\n      </Section>\r\n      \r\n        \r\n     </>   \r\n      \r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}